// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCO.EInvoicing.DataAccess.SqlServer;

namespace TCO.EInvoicing.DataAccess.SqlServer.Migrations
{
    [DbContext(typeof(EInvoicingSqlServerDbContext))]
    [Migration("20210916071729_Add_Settings_Table")]
    partial class Add_Settings_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ei")
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TCO.EInvoicing.Entities.EInvoicingSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("InvoicesUpdatesInboundLastEventDateUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("InvoicesUpdatesInboundLastInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("InvoicesUpdatesOutboundLastEventDateUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("InvoicesUpdatesOutboundLastInvoiceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InvoicesUpdatesInboundLastEventDateUtc = new DateTimeOffset(new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoicesUpdatesInboundLastInvoiceId = 0L,
                            InvoicesUpdatesOutboundLastEventDateUtc = new DateTimeOffset(new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            InvoicesUpdatesOutboundLastInvoiceId = 0L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
